html, body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 10px;
}
p {
    margin: 0;
}

.flex {
    display: flex;
}

.column {
    flex-direction: column;
}

.row {
    flex-direction: row;
}

.sb {
    justify-content: space-between;
}
.center {
    justify-content: center;
    align-items: center;
    text-align: center;
    margin: auto;
}

.column10 {
    min-width: 10%;
    width: 10%;
    max-width: 10%;
}
.column20 {
    min-width: 20%;
    width: 20%;
    max-width: 20%;
}
.column45 {
    min-width: 45%;
    width: 45%;
    max-width: 45%;
}
.column55 {
    min-width: 55%;
    width: 55%;
    max-width: 55%;
}
.column70{
    min-width: 70%;
    width: 70%;
    max-width: 70%;
}

.hidden {
    display: none;
}

.commandArea {
    width: 40%;
    height: 95vh;
}

.commandArea > * {
    margin-bottom: 1em;
    margin-top: 0;
}

.commandArea > div:last-child {
    margin-bottom: 0;
}

.commandHistory {
    width: 100%;
    height: 80vh;
    box-sizing: border-box;
    overflow: auto;
}

.contentWrapper {
    padding: 0.3em;
}

#syntax-display{
    height: fit-content;
    min-height: 5em;
    padding: .25em .5em;
}

.success-response span {
    font-weight: 800;
    color: #2ac52a;
}

.error-response span {
    font-weight: 800;
    color: #c52a2a;
}

#inputField {
    width: 100%;
    height: 15vh;
    padding: 0.8em;
    display: block;
    box-sizing: border-box;
    resize: none;
}

.visualizationArea {
    width: 55%;
}

.robotVisualization {
    height: 45vh;
    width: 100%;
    box-sizing: border-box;
}

.variableView {
    height: 45vh;
    width: 100%;
    box-sizing: border-box;
    padding: .8em;
}

.variableViewColum {
    width: 45%;
    box-sizing: border-box;
    overflow: auto;
}

.variableViewColum h2 {
    font-size: 1.2em;
    font-weight: bold;
    border-bottom: 0.1em solid var(--text-on-background-color);
}

.command-highlighted {
    background-color: var(--group-A-active-color) !important;
}

#inputField.locked {
    background-color: color-mix(in srgb, var(--slate-background-color), var(--locked-color) 20%);
    border-color: var(--locked-color);
    border-style: dashed;
}

.field.undone {
    background-color: var(--undone-color);
}

.undone-feedback {
    color: var(--text-on-background-color);
    padding: .5em;
}

.stateVariableSelectionWrapper label {
    margin-left: .3em;
    margin-bottom: .5em;
}


/* Spinner animation */
.spinner {
    display: inline-block;
    height: 2.2em;
    width: 2.2em;
    border: .3em solid var(--spinner-color);
    border-radius: 50%;
    border-top-color: var(--text-on-background-color);
    animation: spin 1s ease-in-out infinite;
    -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
    to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
    to { -webkit-transform: rotate(360deg); }
}


/* Override Bootstrap */
.dropdown-item {
    cursor: pointer;
    padding: 0;
}
.form-check .form-check-input {
    margin-left: .5em;
    cursor: pointer;
}
.form-check .form-check-label {
    padding: 0 .5em;
    width: 100%;
}